<?php
// This class was automatically generated by build task
// You should not change it manually as it will be overwritten on next build
// @codingStandardsIgnoreFile


use \Codeception\Maybe;
use Codeception\Module\PowerHelper;

/**
 * Inherited methods
 * @method void execute($callable)
 * @method void wantToTest($text)
 * @method void wantTo($text)
 * @method void expectTo($prediction)
 * @method void expect($prediction)
 * @method void amGoingTo($argumentation)
 * @method void am($role)
 * @method void lookForwardTo($achieveValue)
*/

class PowerGuy extends \Codeception\AbstractGuy
{
    
    /**
     * -> This method is proxified to corresponding module.
     *
     *
     * @see Codeception\Module\PowerHelper::gotThePower()
     */
    public function gotThePower() {
        $step = new \Codeception\Step\Action('gotThePower', func_get_args());
        return $this->scenario->runStep($step);
    }

 
    /**
     * -> This method is proxified to corresponding module.
     *
     *
     * @see Codeception\Module\PowerHelper::castFireball()
     */
    public function castFireball() {
        $step = new \Codeception\Step\Action('castFireball', func_get_args());
        return $this->scenario->runStep($step);
    }

 
    /**
     * -> This method is proxified to corresponding module.
     *
     *
     * @see Codeception\Module::getName()
     */
    public function getName() {
        $step = new \Codeception\Step\Action('getName', func_get_args());
        return $this->scenario->runStep($step);
    }
}

